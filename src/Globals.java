// DO NOT EDIT THIS FILE - it is automatically generated, edit file under project/java dir
// This string is autogenerated by ChangeAppSettings.sh, do not change spaces amount anywhere
package com.androthsoft.battlefree;

import android.app.Activity;
import android.content.Context;
import java.util.Vector;
import android.view.KeyEvent;

class Globals {
	public static String ApplicationName = "Wesnoth";

	public static String AppLibraries[] = { 
		"SDL-1.2"
	};

	public static final boolean Using_SDL_1_3 = false;

	// Should be zip file
	public static String[] DataDownloadUrl;

	public static void setDownloadUrls() {
		String[] urlsFree = {
			"zip|res|wesnoth.zip.jet",
		};
		String[] urlsUnlicensed = {
			"zip|res|wesnoth.zip.jet",
			"tar|s3|battle-for-wesnoth|wesnoth_unlicensed.tar",
		};
		String[] urlsFull = {
			"zip|res|wesnoth.zip.jet",

			"tar|s3|battle-for-wesnoth|data_core_music.tar",
			"tar|s3|battle-for-wesnoth|data_core_images.tar",

			//"tar|s3|battle-for-wesnoth|multiplayer.tar",

			// campaigns
			// TODO(cjhopman): convert these to s3 w/ gatekeeper authorization

			"tar|s3|battle-for-wesnoth|an_orcish_incursion.tar",
			"tar|s3|battle-for-wesnoth|delfadors_memoirs.tar",
			"tar|s3|battle-for-wesnoth|descent_into_darkness.tar",
			"tar|s3|battle-for-wesnoth|eastern_invasion.tar",
			"tar|s3|battle-for-wesnoth|heir_to_the_throne.tar",
			"tar|s3|battle-for-wesnoth|legend_of_wesmere.tar",
			"tar|s3|battle-for-wesnoth|liberty.tar",
			"tar|s3|battle-for-wesnoth|northern_rebirth.tar",
			"tar|s3|battle-for-wesnoth|sceptre_of_fire.tar",
			"tar|s3|battle-for-wesnoth|son_of_the_black_eye.tar",
			"tar|s3|battle-for-wesnoth|the_hammer_of_thursagen.tar",
			"tar|s3|battle-for-wesnoth|the_rise_of_wesnoth.tar",
			"tar|s3|battle-for-wesnoth|the_south_guard.tar",
			"tar|s3|battle-for-wesnoth|two_brothers.tar",
			"tar|s3|battle-for-wesnoth|under_the_burning_suns.tar",
		};

		String packageName = "com.androthsoft.battlefree";
		if (packageName.endsWith("free")) {
			DataDownloadUrl = urlsFree;
		} else if (isLicensed) {
			DataDownloadUrl = urlsFull;
		} else {
			DataDownloadUrl = urlsUnlicensed;
		}
	}



	// Set this value to true if you're planning to render 3D using OpenGL - it eats some GFX resources, so disabled for 2D
	public static boolean NeedDepthBuffer = false;

	public static boolean SwVideoMode = true;

	public static boolean HorizontalOrientation = true;

	// prevent device from going to suspend mode
	public static boolean InhibitSuspend = true;

	// Readme text to be shown on download page
	public static String ReadmeText = "^You may press \"Home\" now - the data will be downloaded in background".replace("^","\n");

	public static String CommandLineBase = "wesnoth --smallgui --new-widgets --log-error=all";
	public static String CommandLine = "wesnoth --smallgui --new-widgets --log-error=all";

	public static boolean AppUsesMouse = true;
	
	public static boolean AppNeedsTwoButtonMouse = false;

	public static boolean AppNeedsArrowKeys = false;

	public static boolean AppNeedsTextInput = false;

	public static boolean AppUsesJoystick = false;

	public static boolean AppHandlesJoystickSensitivity = false;

	public static boolean AppUsesMultitouch = false;

	public static boolean NonBlockingSwapBuffers = false;

	public static int AppTouchscreenKeyboardKeysAmount = 4;

	public static int AppTouchscreenKeyboardKeysAmountAutoFire = 1;

	// Phone-specific config, TODO: move this to settings
	public static boolean DownloadToSdcard = true;
	public static boolean PhoneHasTrackball = false;
	public static boolean PhoneHasArrowKeys = false;
	public static boolean UseAccelerometerAsArrowKeys = false;
	public static boolean UseTouchscreenKeyboard = false;
	public static int TouchscreenKeyboardSize = 1;
	public static int TouchscreenKeyboardTheme = 2;
	public static int TouchscreenKeyboardTransparency = 2;
	public static int AccelerometerSensitivity = 2;
	public static int AccelerometerCenterPos = 2;
	public static int TrackballDampening = 0;
	public static int AudioBufferConfig = 0;
	public static final int LEFT_CLICK_NORMAL = 0;
	public static final int LEFT_CLICK_NEAR_CURSOR = 1;
	public static final int LEFT_CLICK_WITH_MULTITOUCH = 2;
	public static final int LEFT_CLICK_WITH_PRESSURE = 3;
	public static final int LEFT_CLICK_WITH_KEY = 4;
	public static final int LEFT_CLICK_WITH_TIMEOUT = 5;
	public static final int LEFT_CLICK_WITH_TAP = 6;
	public static final int LEFT_CLICK_WITH_TAP_OR_TIMEOUT = 7;
	public static int LeftClickMethod = AppNeedsTwoButtonMouse ? LEFT_CLICK_WITH_TAP_OR_TIMEOUT : LEFT_CLICK_NORMAL;
	public static int LeftClickKey = KeyEvent.KEYCODE_DPAD_CENTER;
	public static int LeftClickTimeout = 3;
	public static final int RIGHT_CLICK_NONE = 0;
	public static final int RIGHT_CLICK_WITH_MULTITOUCH = 1;
	public static final int RIGHT_CLICK_WITH_PRESSURE = 2;
	public static final int RIGHT_CLICK_WITH_KEY = 3;
	public static final int RIGHT_CLICK_WITH_TIMEOUT = 4;
	public static int RightClickTimeout = 4;
	public static int RightClickMethod = AppNeedsTwoButtonMouse ? RIGHT_CLICK_WITH_MULTITOUCH : RIGHT_CLICK_NONE;
	public static int RightClickKey = KeyEvent.KEYCODE_MENU;
	public static boolean MoveMouseWithJoystick = false;
	public static int MoveMouseWithJoystickSpeed = 0;
	public static int MoveMouseWithJoystickAccel = 0;
	public static boolean ClickMouseWithDpad = false;
	public static boolean RelativeMouseMovement = AppNeedsTwoButtonMouse; // Laptop touchpad mode
	public static int RelativeMouseMovementSpeed = 2;
	public static int RelativeMouseMovementAccel = 0;
	public static boolean ShowScreenUnderFinger = false;
	public static boolean KeepAspectRatio = false;
	public static int ClickScreenPressure = 0;
	public static int ClickScreenTouchspotSize = 0;
	public static int RemapHwKeycode[] = new int[SDL_Keys.JAVA_KEYCODE_LAST];
	public static int RemapScreenKbKeycode[] = new int[6];
	public static boolean ScreenKbControlsShown[] = new boolean[8]; /* Also joystick and text input button added */
	public static int ScreenKbControlsLayout[][] = new int[8][4];
	public static int RemapMultitouchGestureKeycode[] = new int[4];
	public static boolean MultitouchGesturesUsed[] = new boolean[4];
	public static int MultitouchGestureSensitivity = 1;
	public static int TouchscreenCalibration[] = new int[4];
	public static String DataDir = new String("");
	public static boolean SmoothVideo = false;
	public static boolean MultiThreadedVideo = false;

	public static boolean isLicensed = true;
}
